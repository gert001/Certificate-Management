# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: DNS_Name
    default: 'env-dnsname'

variables:
  - name: GeneratedPassword

steps:
- script: | 
    GeneratedPassword=$(openssl rand -base64 14)
    echo $GeneratedPassword
    openssl req -newkey rsa:2048 -keyout ${{parameters.DNS_Name}}.key -out ${{parameters.DNS_Name}}.csr -subj "/C=GB/ST=London/L=London/O=AXAXL/OU=Global Technology/CN=${{parameters.DNS_Name}}" -passout pass:$GeneratedPassword
    pwd
    echo "##vso[task.setvariable variable=GeneratedPassword]$GeneratedPassword"
  workingDirectory: '$(Build.ArtifactStagingDirectory)' 
  displayName: Generating CSR and Private Key
  
#Next Steps
## import .key and GeneratedPassword into Keyvault.
- task: AzureCLI@2
  displayName: Set Secret in keyvault
  inputs:
    azureSubscription: 'GSPipelines'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az keyvault secret set --name MySecretName --vault-name MyKeyVault --value ${{variables.GeneratedPassword}}

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'Certificate' 
    publishLocation: 'Container'
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional
  
  displayName: 'Run a one-line script'
